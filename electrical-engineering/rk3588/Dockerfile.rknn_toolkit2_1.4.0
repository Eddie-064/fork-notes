# 因为官方的 docker 镜像放在百度网盘太难下了，我根据如下官方文档编写了这个 Dockerfile ：
#　　https://github.com/rockchip-linux/rknn-toolkit2/blob/master/doc/Rockchip_Quick_Start_RKNN_Toolkit2_CN-1.4.0.pdf
FROM ubuntu:20.04

WORKDIR /work

# set time zone
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 

RUN apt-get update \
    && apt-get install -y python3 python3-dev python3-pip \
      libxslt1-dev zlib1g zlib1g-dev libglib2.0-0 libsm6 libgl1-mesa-glx libprotobuf-dev gcc \
      curl unzip vim \
    # clean apt cache
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN pip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple

#　将本地已经下载完成的 rknn-toolkit2 仓库映射进来
ADD rknn-toolkit2 rknn-toolkit2-master

# 选择构建时自动下载仓库，比较费流量，而且没飞机的话下载较慢 
# RUN curl -L -o rknn-toolkit2.zip https://github.com/rockchip-linux/rknn-toolkit2/archive/refs/heads/master.zip \
#     && unzip rknn-toolkit2.zip \

RUN cd rknn-toolkit2-master \
    # list files for debug
    && ls -al \
    # install base env
    && pip install --no-cache-dir protobuf==3.12.2 numpy==1.19.5 flatbuffers==1.12 \
    # install other dependencies
    && pip install --no-cache-dir -r doc/requirements_cp38-1.4.0.txt \
    # install rknn_toolkit2 v1.4.0
    && pip install --no-cache-dir packages/rknn_toolkit2-1.4.0_22dcfef4-cp38-cp38-linux_x86_64.whl \
    # clean env
    && cd .. \
    && rm -rf rknn-toolkit2* \
    && rm -rf ~/.cache

